@startuml Design_Class_Diagram

class Account {
    -balance: double
    +deposit(amount: double): void
    +withdraw(amount: double): void
}

class RaffleCup {
    -dice: Die[]
    +roll(): int[]
}

class Die {
    -numberOfSides: int
    +roll(): int[]
}
class Bank {
    -balance: double
    +takeMoney(account: Account): void
    +giveMoney(account: Account): void
}
class Player {
    -account: Account
    -name: String
    -age: int
}

class Board {
    -fields: Field[]
    -chanceCards: ChanceCard[] 
}

abstract class Field {
    -tokens: Tokens[]
    -name: String
    -position: int
    -fieldType: FieldType
    +landOnField(token: Token): void
}

class Jail {
    +landOnField(token: Token): void
}

class Property {
    -price: double
    -owner: Player

    +landOnField(token: Token): void
}

class Token {
    -tokenType: TokenType
    -player: Player
}

abstract class ChanceCard {

}

enum FieldType {
    PROPERTY,
    CHANCE,
    START,
    JAIL,
    PARKING,
    GO_TO_JAIL,
}

enum TokenType {
    DOG,
    CAT,
    CAR,
    BOAT,
}

Jail --|> Field
Property --|> Field



@enduml